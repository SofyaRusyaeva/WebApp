version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: postgres_db
    env_file: .env
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USERNAME} -d ${DATABASE_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  webapp:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: webapp
    depends_on:
      postgres:
        condition: service_healthy
    env_file: .env
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/${DATABASE_NAME}
      SPRING_DATASOURCE_USERNAME: ${DATABASE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${DATABASE_PASSWORD}
      SPRING_JPA_HIBERNATE_DDL_AUTO: validate
      SPRING_FLYWAY_URL: jdbc:postgresql://postgres:5432/${DATABASE_NAME}
      SPRING_FLYWAY_USER: ${DATABASE_USERNAME}
      SPRING_FLYWAY_PASSWORD: ${DATABASE_PASSWORD}
    ports:
      - "8080:8080"
    restart: unless-stopped

volumes:
  postgres_data: